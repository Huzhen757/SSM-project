<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:s="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!--Spring Security的使用 基于该认证方式下的用户登录-->
    <!--1. 导入相关的依赖-->
    <!--2. 配置核心文件-->
    <!--3. web.xml文件中配置springSecurityFilterChain-->
    <!-- 配置不拦截的资源 -->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/fail.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>

    <!--auto-config为true表示不用自己编写登录的页面，框架提供默认登录页面
    use-expressions表示是否使用SPEL表达式-->
    <security:http auto-config="true" use-expressions="false">
        <!--interceptor-url定义一个过滤规则 pattern表示对哪些url进行绑定 access属性表示
        访问系统的人，必须有ROLE_USER的角色(请求对应的URL需要什么权限) 默认配置为一个逗号分隔的角色列表 请求的用户只需要满足
        一个角色就可以成功访问对象的URL-->
        <security:intercept-url pattern="/**.jsp" access="ROLE_USER, ROLE_ADMIN"/>
        <!--自定义登录界面 login.html为登录页面 authentication-failure-forward-url用户权限校验失败后跳转到的页面
         default-target-url登录成功后跳转的页面-->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login.do"
                default-target-url="/pages/user-show1.jsp"
                authentication-failure-url="/fail.jsp"
                authentication-success-forward-url="/pages/user-show1.jsp"
         />
        <!--关闭CSRF 默认是开启的-->
        <security:csrf disabled="true"/>
        <!--注销账户-->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp"/>
    </security:http>
    <!--切换成数据库中的username和password 配置认证管理器-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <!--配置加密方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!--配置加密类-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
<!--    <security:authentication-manager>-->
<!--        <security:authentication-provider>-->
<!--            <security:user-service>-->
<!--                <security:user name="user" password="{noop}user" authorities="ROLE_USER"/>-->
<!--                <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>-->
<!--            </security:user-service>-->
<!--        </security:authentication-provider>-->
<!--    </security:authentication-manager>-->

</beans>